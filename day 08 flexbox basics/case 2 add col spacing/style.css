/*
taken from challenge 03, we add flexbox to it resposively.
*/

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Roboto", sans-serif;
}

.intro {
  background-color: #23424a;
  padding: 80px 0;
}

.container {
  width: 80%;
  max-width: 1100px;
  margin: 0 auto;
}

.row{
  display: flex; /*this makes .row to a flex container*/
  /* flex-direction: row; the default, sometimes we will want it in columns from reasons we'll see in the future */
  gap: 30px; /*now we can say that this is the best way to add spacing between flex items, it is almost supported in every browser*/
}

.col {
  /*col is a direct child of .row which is the flex container -> col is called a flex item */
  width: 100%;
  background-color: chartreuse; /*just to see each col individualy */
}

.intro__content {
  width: 60%;
}

#intro__title {
  color: white;
  font-weight: 900;
  font-size: 3rem;
}

#intro__p {
  color: rgba(255, 255, 255, 0.85);
  font-size: 1.3125rem;
  font-weight: 400;
  margin-bottom: 3em;
}

.intro__btn {
  background-color: #38cfd9;
  padding: 0.75em 2em;
  border-radius: 100px;
  max-width: 285px;
  text-align: center;
  cursor: pointer;
  transition: opacity 200ms ease-in-out, transform 100ms ease-in-out;
  font-size: 1.3125rem;
}

.intro__btn a {
  letter-spacing: 0.05em;
  text-transform: uppercase;
  font-weight: 700;
  color: #072a2d;
  text-decoration: none;
}

.intro__btn:hover,
.intro__btn:focus {
  opacity: 0.75;
  transform: translateY(-3px);
}

/*Comments:
* there was an older way that was shown to add the spacing which was to add a selector .col + .col {} which takes every col except the first and then add margin-left of 30px. it will eventually do the same work as gap: 30px.
*/
